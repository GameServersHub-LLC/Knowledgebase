import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse(`{"title":"Changing the Default SSH Port","description":"Explore GameServersHub's Linux Guide for comprehensive information on Linux. Learn about installation, features, and updates for mastering your Linux system!","frontmatter":{"head":[["meta",{"name":"description","content":"Explore GameServersHub's Linux Guide for comprehensive information on Linux. Learn about installation, features, and updates for mastering your Linux system!"}],["meta",{"name":"keywords","content":"Linux"}]],"title":"Changing the Default SSH Port"},"headers":[],"relativePath":"dedicated-server-guides/linux/linux-ssh-port-change.md","filePath":"dedicated-server-guides/linux/linux-ssh-port-change.md","lastUpdated":1726616025000}`);
const _sfc_main = { name: "dedicated-server-guides/linux/linux-ssh-port-change.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="linux-how-to-change-the-default-ssh-port" tabindex="-1">Linux: How to change the default SSH Port <a class="header-anchor" href="#linux-how-to-change-the-default-ssh-port" aria-label="Permalink to &quot;Linux: How to change the default SSH Port&quot;">​</a></h1><p>By default, port 22 is used to establish an SSH connection, and it is automatically configured during the installation of your operating system. However, since attackers frequently target this port due to its common use for SSH connections, it is advisable not to keep it as the default. Therefore, we recommend changing it as one of your first setup steps for your Linux server.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Please note that if you are using a firewall, such as UFW, you will need to open the port to allow connections through the SSH port you have selected. Additionally, when choosing your desired port, ensure that it is not already in use by another service. You can refer to the <a href="https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml" target="_blank" rel="noreferrer">list of pre-assigned ports</a> for guidance.</p></div><h2 id="changing-ssh-connection-port" tabindex="-1">Changing SSH Connection Port <a class="header-anchor" href="#changing-ssh-connection-port" aria-label="Permalink to &quot;Changing SSH Connection Port&quot;">​</a></h2><p>This guide is based on Ubuntu 22.04 LTS and uses the Nano text editor due to its ease of use for beginners. If you are using a different Linux distribution, the commands may vary from those shown below. Also if you are familiar with another text editor, please feel free to use that instead.</p><h3 id="step-one" tabindex="-1">Step One: <a class="header-anchor" href="#step-one" aria-label="Permalink to &quot;Step One:&quot;">​</a></h3><ul><li>Log on to the server as an administrator</li></ul><h3 id="step-two" tabindex="-1">Step Two: <a class="header-anchor" href="#step-two" aria-label="Permalink to &quot;Step Two:&quot;">​</a></h3><p>Open the SSH configuration file (<strong>sshd_config</strong>) with the text editor nano:</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The <code>sudo</code> command in Linux allows users to execute commands with elevated privileges, as defined in the sudoers file. By prefixing a command with sudo, users can perform tasks requiring administrative rights, with each action logged for security and auditing purposes.</p></div><ul><li><code>sudo nano /etc/ssh/sshd_config</code></li><li>Then find <code>#Port 22</code> and replace it with <code>Port [Your desired port number]</code>.</li></ul><p>Portion of <strong>sshd_config</strong> file:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># This is the sshd server system-wide configuration file.  See</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># sshd_config(5) for more information.</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># This sshd was compiled with PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># The strategy used for options in the default sshd_config shipped with</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># OpenSSH is to specify options with their default value where</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># possible, but leave them commented.  Uncommented options override the</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># default value.</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">Include</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}"> /etc/ssh/sshd_config.d/</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">*</span><span style="${ssrRenderStyle({ "--shiki-light": "#032F62", "--shiki-dark": "#9ECBFF" })}">.conf</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">Port</span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}"> 49231</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">#AddressFamily any</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">#ListenAddress 0.0.0.0</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}">#ListenAddress ::</span></span></code></pre></div><p>Once you have set your desired SSH port in the configuration file, you will need to exit the file and save your changes using the following keyboard shortcuts.</p><ul><li>Press <code>Ctrl + X</code> to initiate the exit process.</li><li>When prompted to save the document (You will be choosing <code>Y</code>): <ul><li>Press <code>Y</code> for yes.</li><li>Press <code>N</code> for no.</li></ul></li><li>Press <code>Enter</code> to finalize your choice.</li></ul><h3 id="step-three" tabindex="-1">Step Three: <a class="header-anchor" href="#step-three" aria-label="Permalink to &quot;Step Three:&quot;">​</a></h3><p>To finalize the configuration changes, you will need to restart the necessary services to apply the changes on your server.</p><p>To apply the configuration changes, run the following commands:</p><ul><li><code>systemctl restart sshd</code></li></ul><p><strong>Optional:</strong> To confirm that SSH is running and the configuration changes have been applied successfully, you can run the following command:</p><ul><li><code>systemctl status sshd</code></li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("dedicated-server-guides/linux/linux-ssh-port-change.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const linuxSshPortChange = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  linuxSshPortChange as default
};
